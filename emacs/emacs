;;Author: s0ysauc3
;; Emacs config file
;;;;;;;;;;;;Loading paths;;;;;;;;;;;;;;;;;

;;load themes from the directory and extensions
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")
;;(add-to-list 'load-path' "~/.emacs.d/")
(add-to-list 'load-path "~/.emacs.d/extensions/")


;;;;;;;;;;;;; MELPA package admin ;;;;;;;;;;;;;;;;
(require 'package)
(add-to-list 'package-archives
	     '("melpa" . "http://melpa.org/packages/") t)

(when (< emacs-major-version 24)
  ;; For important compatibility libraries like cl-lib
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/")))

(package-initialize) ;; You might already have this line

;;;;;; List of packages that need to be installed ;;;;;;;;;;;;;;;;

(setq package-list '(auto-complete popup color-theme lua-mode magit multi-term popup smex spacegray-theme sr-speedbar sublimity tabbar theme-changer yasnippet ))

; Refresh package list
(unless package-archive-contents
  (package-refresh-contents))

; install the missing packages
(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

;;;;;; Plugin activation ;;;;;;;;;;;;;;;

;; Tabbar
(require 'tabbar)

(setq tabbar-use-images nil)

(setq tabbar-buffer-groups-function
      (lambda ()
	(list "All Buffers")))

(setq tabbar-buffer-list-function
      (lambda ()
	(remove-if
	 (lambda(buffer)
	   (find (aref (buffer-name buffer) 0) " *"))
	 (buffer-list))))


(tabbar-mode 1)


;; Ido
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(setq ido-ignore-buffers '("\\` " "^\*"))

; make ido display choices vertically
(setq ido-separator "\n")
(setq ido-create-new-buffer 'always)
(ido-mode 1)


;; smex
(require 'smex) ; Not needed if you use package.el
(smex-initialize) ; Can be omitted. This might cause a (minimal) delay
; when Smex is auto-initialized on its first run.
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)


;; File tree explorer
(require 'sr-speedbar)
     

;; YaSnippet
(require 'yasnippet)
(setq yas-snippet-dirs '("~/.emacs.d/snippets"))
(yas-global-mode 1)
(define-key yas-minor-mode-map (kbd "<tab>") nil)
(define-key yas-minor-mode-map (kbd "TAB") nil)


;; Sublimity
(require 'sublimity)
(require 'sublimity-scroll)
;; (require 'sublimity-map)
;; (require 'sublimity-attractive)


;; Auto complete
(require 'auto-complete-config)
(global-auto-complete-mode t)
(setq ac-auto-start nil)
;;(setq ac-use-fuzzy t) ; This might need to be disabled if completion is not good or slow
(set-default 'ac-sources
	     '(ac-source-imenu
	       ac-source-dictionary
               ac-source-words-in-buffer
               ac-source-words-in-same-mode-buffers
               ac-source-words-in-all-buffer))

(ac-set-trigger-key "TAB")   ;TAB works as auto complete
(ac-set-trigger-key "<tab>") ;"       "  " " 

;;;;;;;;;;;Function definition and alias;;;;;;;;;;;;;

;;;;;;;;;;Major mode definition and association;;;;;;;;;;;;;;;;

;;.ino files use c++-mode
(setq auto-mode-alist
      (append
       '(("\\.ino$" . c++-mode))
       auto-mode-alist))

;;Emacs markdown mode
(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))



;;;;;;;;;;;;Other aspects. Minor mode customization;;;;;;;;;

;; Add line numbering
(global-linum-mode t)
(setq linum-format "%d "); Add some space to between line number and text

;; Bracket pairing
(show-paren-mode 1); turn on paren matching
(setq show-paren-delay 0); no delay to show
(setq show-paren-style 'parenthesis); highlight only parenthesis

;; Cursor
(blink-cursor-mode 1)
(setq-default cursor-type 'bar)

;; Highlight current line
(global-hl-line-mode 1)

;; Insert key disabled
(global-set-key [insert] (lambda () (interactive)))
(global-set-key [insertchar] (lambda () (interactive)))

;; F12 indentes region
 (global-set-key [f12] 'indent-region)

;; Temporary directory for backup files
(defconst emacs-tmp-dir (format "%s%s%s/" temporary-file-directory "emacs" (user-uid)))
(setq backup-directory-alist
      `((".*" . ,emacs-tmp-dir)))
(setq auto-save-file-name-transforms
      `((".*" ,emacs-tmp-dir t)))
(setq auto-save-list-file-prefix
      emacs-tmp-dir)

;;;;;;;;;;;;;Theme definition;;;;;;;;;;

;;If we want dynamic theme depending on the terminal or GUI interface uncomment the block

(load-theme 'zenburn t)
;(load-theme 'zenburn t t )
;;(defun mb/pick-color-theme (frame)
;;  (select-frame frame)
;; (if (window-system frame)
;;       (progn
;; 	(enable-theme 'spacegray))
;;     (progn
;;       (enable-theme 'zenburn))))
;;
;;(add-hook 'after-make-frame-functions 'mb/pick-color-theme)

;; ;Defines theme if emacs is not called as client
;;(if window-system
;;    (enable-theme 'spacegray)  
;;  (enable-theme 'zenburn))

;; Personal BG colors
(set-face-attribute 'region nil :weight 'bold)
;;(set-face-background 'hl-line "#333366")
(set-face-foreground 'highlight nil)
;; Because most of the terminals only support 256 colors, we will need this.
;; Changes the conflicting colors depending on where Emacs is running
;;IN GUI, WE SHOULD CHANGE THE COLOR FOR 232830
;;(add-to-list 'default-frame-alist '(set-face-attribute 'linum nil :background "#3e444"))

;; Menu Scroll Bar and Tool Bar customization
(tool-bar-mode -1)
(scroll-bar-mode -1)

(defun tb/tb-enabler (frame)
  (select-frame frame)
 (if (window-system frame)
       (progn
 	(menu-bar-mode 1))
    (progn
       (menu-bar-mode -1))))

(add-hook 'after-make-frame-functions 'tb/tb-enabler)

;;multi-term customization
(setq multi-term-program "/bin/zsh")

;;Widnow resizing and navigation
(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<down>") 'shrink-window)
(global-set-key (kbd "S-C-<up>") 'enlarge-window)
(windmove-default-keybindings)

;; Hide welcome screen
(setq inhibit-startup-message t)
